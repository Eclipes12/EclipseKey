-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = game:GetService("Players").LocalPlayer

-- EclipseLib Definition (Simplified for the window creation)
local EclipseLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(135, 206, 235),    -- Light Sky Blue (background)
            Second = Color3.fromRGB(173, 216, 230),  -- Light Blue (lighter elements)
            Stroke = Color3.fromRGB(70, 130, 180),   -- Steel Blue (for borders/strokes)
            Divider = Color3.fromRGB(176, 224, 230), -- Powder Blue (used for dividing lines)
            Text = Color3.fromRGB(0, 0, 0),           -- Black (for text)
            TextDark = Color3.fromRGB(0, 0, 139)      -- Dark Blue (for dark text)
        }
    },
    SelectedTheme = "Default",  -- Default theme set
    Folder = nil,
    SaveCfg = false
}

-- Function to create a loading screen
local function CreateLoadingScreen()
    local loadingScreen = Instance.new("ScreenGui")
    loadingScreen.Parent = game.Players.LocalPlayer.PlayerGui

    -- Background Frame for the loading screen
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Transparent background
    frame.BackgroundTransparency = 0.8  -- Slight transparency
    frame.BorderSizePixel = 0
    frame.Parent = loadingScreen

    -- Loading Text Label
    local loadingText = Instance.new("TextLabel")
    loadingText.Size = UDim2.new(0, 300, 0, 40)
    loadingText.Position = UDim2.new(0.5, -150, 0.5, -20)
    loadingText.BackgroundTransparency = 1
    loadingText.Text = "Loading"
    loadingText.TextColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Text
    loadingText.Font = Enum.Font.GothamBold
    loadingText.TextSize = 18  -- Smaller font size
    loadingText.TextStrokeTransparency = 0.5
    loadingText.TextTransparency = 0
    loadingText.Parent = frame

    -- Slow-loading animation for text
    local dotCount = 0
    local dots = { ".", "..", "..." }
    local function updateLoadingText()
        dotCount = (dotCount % 3) + 1
        loadingText.Text = "Loading" .. dots[dotCount]
    end

    -- Loop the animation every 1 second (slower pace)
    game:GetService("RunService").Heartbeat:Connect(function()
        updateLoadingText()
    end)

    -- Remove loading screen after 5 seconds, then show the main UI
    delay(5, function()
        loadingScreen:Destroy()  -- Remove loading screen
        CreateMainUI()  -- Show the main UI after loading
    end)
end

-- Function to create the main UI after the loading screen finishes
local function CreateMainUI()
    -- Create the window
    local Window = Instance.new("Frame")
    Window.Size = UDim2.new(0, 400, 0, 300)
    Window.Position = UDim2.new(0.5, -200, 0.5, -150)
    Window.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Main
    Window.BorderSizePixel = 2
    Window.BorderColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Stroke
    Window.Parent = game.Players.LocalPlayer.PlayerGui

    -- Title for the window
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 50)
    Title.BackgroundTransparency = 1
    Title.Text = "Eclipse UI Window"
    Title.TextColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Text
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 24
    Title.Parent = Window

    -- Close Button for the window
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 50, 0, 50)
    CloseButton.Position = UDim2.new(1, -50, 0, 0)
    CloseButton.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Stroke
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 20
    CloseButton.Parent = Window

    CloseButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)

    -- Create a button inside the window
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 200, 0, 50)
    button.Position = UDim2.new(0.5, -100, 0.5, -25)
    button.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Second
    button.Text = "Click Me!"
    button.TextColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Text
    button.Font = Enum.Font.Gotham
    button.TextSize = 18
    button.Parent = Window

    button.MouseButton1Click:Connect(function()
        print("Button Clicked!")
    end)
end

-- Start by showing the loading screen
CreateLoadingScreen()
