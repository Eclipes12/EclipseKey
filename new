-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = game:GetService("Players").LocalPlayer

-- EclipseLib Definition
local EclipseLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(135, 206, 235),    -- Light Sky Blue (background)
            Second = Color3.fromRGB(173, 216, 230),  -- Light Blue (lighter elements)
            Stroke = Color3.fromRGB(70, 130, 180),   -- Steel Blue (for borders/strokes)
            Divider = Color3.fromRGB(176, 224, 230), -- Powder Blue (used for dividing lines)
            Text = Color3.fromRGB(0, 0, 0),           -- Black (for text)
            TextDark = Color3.fromRGB(0, 0, 139)      -- Dark Blue (for dark text)
        }
    },
    SelectedTheme = "Default",  -- Default theme set
    Folder = nil,
    SaveCfg = false
}

-- Function to create a loading screen
local function CreateLoadingScreen()
    local loadingScreen = Instance.new("ScreenGui")
    loadingScreen.Parent = game.Players.LocalPlayer.PlayerGui

    -- Background Frame for the loading screen
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Transparent background
    frame.BackgroundTransparency = 0.8  -- Slight transparency
    frame.BorderSizePixel = 0
    frame.Parent = loadingScreen

    -- Loading Text Label
    local loadingText = Instance.new("TextLabel")
    loadingText.Size = UDim2.new(0, 300, 0, 40)
    loadingText.Position = UDim2.new(0.5, -150, 0.5, -20)
    loadingText.BackgroundTransparency = 1
    loadingText.Text = "Loading"
    loadingText.TextColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Text
    loadingText.Font = Enum.Font.GothamBold
    loadingText.TextSize = 18  -- Smaller font size
    loadingText.TextStrokeTransparency = 0.5
    loadingText.TextTransparency = 0
    loadingText.Parent = frame

    -- Slow-loading animation for text
    local dotCount = 0
    local dots = { ".", "..", "..." }
    local function updateLoadingText()
        dotCount = (dotCount % 3) + 1
        loadingText.Text = "Loading" .. dots[dotCount]
    end

    -- Loop the animation every 1 second (slower pace)
    game:GetService("RunService").Heartbeat:Connect(function()
        updateLoadingText()
    end)

    -- Remove loading screen after 5 seconds, then show the main UI
    delay(5, function()
        loadingScreen:Destroy()  -- Remove loading screen
        CreateMainUI()  -- Show the main UI after loading
    end)
end

-- Create the main UI after loading screen finishes
local function CreateMainUI()
    -- Example of creating a button in the main UI
    CreateButton("Click Me", UDim2.new(0, 200, 0, 50), UDim2.new(0.5, -100, 0.5, -25), function()
        print("Button clicked!")
    end)

    -- Example of creating a window in the main UI
    CreateWindow("My Window", UDim2.new(0, 400, 0, 300), UDim2.new(0.5, -200, 0.5, -150), function()
        print("Window closed!")
    end)
end

-- Function to create a button
local function CreateButton(Text, Size, Position, ClickCallback)
    local Button = Instance.new("TextButton")
    Button.Size = Size
    Button.Position = Position
    Button.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Main
    Button.TextColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Text
    Button.Text = Text
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 18
    Button.BorderSizePixel = 2
    Button.BorderColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Stroke
    Button.Parent = game.Players.LocalPlayer.PlayerGui:WaitForChild("ScreenGui")

    -- Hover effect
    Button.MouseEnter:Connect(function()
        Button.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Second
    end)
    
    Button.MouseLeave:Connect(function()
        Button.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Main
    end)

    -- Button click functionality
    Button.MouseButton1Click:Connect(function()
        if ClickCallback then
            ClickCallback()
        end
    end)
end

-- Function to create a window
local function CreateWindow(Name, Size, Position, CloseCallback)
    local Window = Instance.new("Frame")
    Window.Size = Size
    Window.Position = Position
    Window.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Main
    Window.BorderSizePixel = 2
    Window.BorderColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Stroke
    Window.Parent = game.Players.LocalPlayer.PlayerGui:WaitForChild("ScreenGui")

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 50)
    Title.BackgroundTransparency = 1
    Title.Text = Name
    Title.TextColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Text
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 24
    Title.Parent = Window

    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 50, 0, 50)
    CloseButton.Position = UDim2.new(1, -50, 0, 0)
    CloseButton.BackgroundColor3 = EclipseLib.Themes[EclipseLib.SelectedTheme].Stroke
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 20
    CloseButton.Parent = Window

    CloseButton.MouseButton1Click:Connect(function()
        Window:Destroy()
        if CloseCallback then
            CloseCallback()
        end
    end)

    -- Drag functionality
    local dragging = false
    local dragInput, dragStart, startPos
    local function beginDrag(input)
        dragging = true
        dragStart = input.Position
        startPos = Window.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end

    local function updateDrag(input)
        if dragging then
            local delta = input.Position - dragStart
            Window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end

    Window.InputBegan:Connect(beginDrag)
    Window.InputChanged:Connect(updateDrag)

    return Window
end

-- Start the loading screen when the script runs
CreateLoadingScreen()
